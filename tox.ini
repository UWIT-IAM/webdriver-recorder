[tox]
deps = poetry
install_command = "poetry install"
skip_missing_interpreters = false
envlist = clean,with_session_browser,disable_session_browser,validate_coverage,flake8,black


[pytest]
testpaths = tests


[coverage:report]
exclude_lines =
    pragma: no cover

    def __repr__
    if self.\.debug

    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main_.:

[testenv]
allowlist_externals = poetry
                      coverage
skip_install = true
commands_pre = ./bootstrap_chromedriver.sh
               poetry install


[testenv:with_session_browser]
commands = coverage run --source=webdriver_recorder -m pytest -o log_cli=true -o log_cli_level=INFO tests


[testenv:disable_session_browser]
setenv =
    disable_session_browser = 1
commands =
    coverage run -a --source=webdriver_recorder -m pytest -o log_cli=true -o log_cli_level=INFO tests

[testenv:validate_coverage]
commands = coverage html
           coverage report --fail-under 100


[testenv:clean]
commands = coverage erase


[testenv:flake8]
deps = flake8
commands = flake8 {toxinidir}/webdriver_recorder

[testenv:black]
skip_install = true
deps = black
commands =  black webdriver_recorder tests --line-length 119
            black webdriver_recorder tests --line-length 119 --check

[flake8]
max-line-length = 119
